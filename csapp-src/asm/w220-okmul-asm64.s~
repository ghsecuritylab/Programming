/* $begin tmult_ok_asm64 */
.globl tmult_ok_asm
# int tmult_ok_asm(long x, int y, long *dest);	
# x in %rdi, y in %rsi, dest in %rdx
tmult_ok_asm:
	imulq	%rdi, %rsi
	movq	%rsi, (%rdx)
	setae   %al		# Set low-order byte
	movzbl	%al, %eax
	ret
/* $end tmult_ok_asm64 */

/* $begin umult_ok_asm64 */
.globl umult_ok_asm
# int umult_ok_asm(unsigned long x, unsigned long y, unsigned long *dest);
# x in %rdi, y in %rsi, dest in %rdx
umult_ok_asm:
	movq 	%rdx, %rcx	# Save copy of dest
	movq	%rsi, %rax	# Copy y to %rax
	mulq	%rdi		# Unsigned multiply by x
	movq    %rax, (%rcx)	# Store product at dest
	setae	%al		# Set low-order byte
	movzbl	%al, %eax
	ret
/* $end umult_ok_asm64 */